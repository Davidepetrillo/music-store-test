// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.Data;

#nullable disable

namespace MusicStore.Migrations
{
    [DbContext(typeof(MusicContext))]
    [Migration("20220603135421_LoginAdmin")]
    partial class LoginAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicStore.Models.Acquista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<int>("StrumentoMusicaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrumentoMusicaleId");

                    b.ToTable("Acquista");
                });

            modelBuilder.Entity("MusicStore.Models.AcquistoStrumento", b =>
                {
                    b.Property<string>("fotoStrumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeStrumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantitaAcquistata")
                        .HasColumnType("int");

                    b.ToTable("acquistaStrumento");
                });

            modelBuilder.Entity("MusicStore.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("nomeCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("MusicStore.Models.LoginAdmin", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("LoginAdmin");
                });

            modelBuilder.Entity("MusicStore.Models.Rifornisci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<int?>("StrumentoMusicaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrumentoMusicaleId");

                    b.ToTable("Rifornisci");
                });

            modelBuilder.Entity("MusicStore.Models.StrumentoMusicale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumeroLike")
                        .HasColumnType("int");

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.Property<int>("QuantitaStrumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("StrumentoMusicale");
                });

            modelBuilder.Entity("MusicStore.Models.Acquista", b =>
                {
                    b.HasOne("MusicStore.Models.StrumentoMusicale", "strumentoMusicale")
                        .WithMany("Acquista")
                        .HasForeignKey("StrumentoMusicaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("strumentoMusicale");
                });

            modelBuilder.Entity("MusicStore.Models.Rifornisci", b =>
                {
                    b.HasOne("MusicStore.Models.StrumentoMusicale", "strumentoMusicale")
                        .WithMany("Rifornisci")
                        .HasForeignKey("StrumentoMusicaleId");

                    b.Navigation("strumentoMusicale");
                });

            modelBuilder.Entity("MusicStore.Models.StrumentoMusicale", b =>
                {
                    b.HasOne("MusicStore.Models.Categoria", "Categoria")
                        .WithMany("StrumentiMusicali")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MusicStore.Models.Categoria", b =>
                {
                    b.Navigation("StrumentiMusicali");
                });

            modelBuilder.Entity("MusicStore.Models.StrumentoMusicale", b =>
                {
                    b.Navigation("Acquista");

                    b.Navigation("Rifornisci");
                });
#pragma warning restore 612, 618
        }
    }
}
