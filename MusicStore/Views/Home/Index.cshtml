<!--Intestazione-->
<div class="container-fluid mt-3 mb-2">
    <div class="row text-center">
        <div class="col-12">
            <input id="search_struments" class="border border-3" type="text" placeholder="Cerca strumento">
        </div>
    </div>
</div>

                       
<!--Sezione Strumenti-->  
<section>
    <div class="container mt-3 mb-3">
        <!--Pagina in attesa -->
        <div id="wait_struments" class="row text-center">
              <div class="text-center">
                 <div class="spinner-border" role="status">
                    <span class="sr-only"></span>
                 </div>
              </div>
        </div>
        <!--Pagina con strumenti-->
        <div id="struments_output" class="row my-3 d-none">

        </div>
    </div>
</section>

<!--Sezione degli Scripts-->
@section Scripts  {
<script type="text/javascript">

//Aggiungiamo evento di keyup richiamando la funzione di ricerca della stringa
document.getElementById('search_struments').addEventListener('keyup', searchParameter);

searchParameter();
    
//Funzione che cerca la stringa in base al valore associato nella barra di ricerca
//richiamando la funzione che carica le card degli strumenti
function searchParameter() {
    var inputOfSearch = document.getElementById('search_struments').value;
    loadStrument(inputOfSearch);
}

//Funzione che carica le card degli strumenti  tramite axios
function loadStrument(parameter) {


    document.getElementById('struments_output').innerHTML = '';
    
    axios.get('/api/Struments/Get', {
        params: {
            searchString : parameter
        }
    }).then((result) => {
        console.log(result);

        if (result.data.lenght == 0) 
        {
            document.getElementById('wait_struments').classList.add('d-none');
        } 
        else 
        {
            document.getElementById('wait_struments').classList.add('d-none');
            document.getElementById('struments_output').classList.remove('d-none');

<<<<<<< HEAD
            result.data.forEach(strument => {
                

            var urlDetails = "/Home/Details/" + strument.id;

            document.getElementById('struments_output').innerHTML +=
            `

                <div class="instrument_card col-lg-4 col-md-6 col-xs-12 text-center">
             <button type="button" class="btn btn-outline-danger btLike icon-wrapper fas fa-heart onclick="likeHeart()"">&#10084;</button>
                    <a href="${urlDetails}">
=======
            result.data.forEach(strument => {   

            document.getElementById('struments_output').innerHTML +=
            `
                <div class="col-lg-4 col-md-6 col-xs-12 text-center">
                    <a href="/Home/Details/${strument.id}">
>>>>>>> 82f55ebe892630b62a45437421d4939f18f26a8e
                        <div class="card my-3 border-0">
                            <img src="${strument.foto}" class="img-fluid" alt="Image">
                            <div id="dettagliStrumento" class="card-body">
                                <h5 class="card-title">${strument.nome}</h5>
                                <p class="card-text">${strument.descrizione}</p>                               
                            </div>                           
                        </div>
                    </a>
<<<<<<< HEAD
                </div>
                
=======
                    <div class="wrapper">
                        <div class="icon-wrapper">
                            <i class="fas fa-heart"></i>
                        </div>
                     </div>
                </div> 
>>>>>>> 82f55ebe892630b62a45437421d4939f18f26a8e
            `
            });
        }
    }).catch((error) => {
    console.log(error);
    });
}
<<<<<<< HEAD

function likeHeart(){

=======
/*
>>>>>>> 82f55ebe892630b62a45437421d4939f18f26a8e
var heartContainer = document.getElementsByClassName('icon-wrapper');

Object.keys(heartContainer).forEach(singleElement => {

    heartContainer[singleElement].addEventListener('click', function () {
        if (heartContainer[singleElement].classList.contains('liked')) {
            heartContainer[singleElement].classList.add('unliked');
            heartContainer[singleElement].classList.remove('liked');
            setTimeout(unlikeRemover, 250);
        }
        else {
            heartContainer[singleElement].classList.add('liked');
            heartContainer[singleElement].classList.remove('unliked');
        }

        function unlikeRemover() {
            heartContainer[singleElement].classList.remove('unliked');
        }
    });

<<<<<<< HEAD
});

}


=======
});*/
>>>>>>> 82f55ebe892630b62a45437421d4939f18f26a8e
</script>
}
